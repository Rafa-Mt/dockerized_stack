services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: always
    networks:
      custom_bridge:
        ipv4_address: 192.168.100.10
    depends_on:
      - backend_server
    ports: # ! Temporal: Replace with reverse proxy
      - "8080:8080"

    volumes: # ! Temporal: Only for development hot-reload
      - ./client/src:/app/src
      - ./client/public:/app/public
      - ./client/package.json:/app/package.json
      - ./client/package-lock.json:/app/package-lock.json

  backend_server:
    build: 
      context: ./backend_server
      dockerfile: Dockerfile
    restart: always
    networks:
      custom_bridge:
        ipv4_address: 192.168.100.12
    environment:
      - ENVIRONMENT=development
    env_file:
      - ./env/backend_server.env
    depends_on:
      - postgres
      - redis
    ports: # ! Temporal: Replace with reverse proxy
      - "8090:8090"

  redis:
    image: redis:8.0.2-alpine
    restart: always
    volumes:
      - redis-data:/data
    networks:
      custom_bridge:
        ipv4_address: 192.168.100.11

  postgres:
    image: postgres:17-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./backend_server/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    env_file:
      - ./env/postgres.env
    shm_size: 128mb
    ports: # ! Temporal for testing
      - "5440:5432"

networks:
  custom_bridge:
    driver: bridge
    ipam:
      config:
      - subnet: 192.168.100.0/24

volumes:
  redis-data:
  postgres-data: